Emacs has an excellent undo system, once you get the hang of it. But as with all things Emacs, it could be better!

#+begin_src emacs-lisp
  (setq mak::undo-tree-dir (expand-file-name "undo-tree-history" state-emacs-directory))
  (use-package undo-tree
    :pin elpa
    :diminish undo-tree-mode
    :bind
    ("C-z" . undo)
    ("M-z" . undo-tree-redo)
    ("C-M-z" . undo-tree-visualize)
    :config
    (global-undo-tree-mode)
    :custom
    (undo-tree-visualizer-diff t)
    (undo-tree-visualizer-timestamps t)
    (undo-tree-history-directory-alist `(("." . ,mak::undo-tree-dir))))
#+end_src

It's important to note that the files in the =undo-tree-history= directory will all be hidden, which can cause some confusion. To prevent this, let's write a message file:

#+begin_src emacs-lisp
  (make-directory mak::undo-tree-dir t)
  (write-region "" nil (expand-file-name "ALL-FILES-IN-THIS-DIRECTORY-ARE-HIDDEN" mak::undo-tree-dir))
#+end_src

Let's see how the undo tree looks for this buffer:

[[http://fasciism.com/img/2017-02-13-copenhagen-interpretation.png]]

As you can see, I've performed several undo and redo operations at this point, and can navigate through them. If I choose any node in the undo tree, I will be presented with an explanatory diff telling me what that node's change represents in a small window.
