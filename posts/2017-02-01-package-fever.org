I've been holding off on adding packages to my configuration until I had been at this for a month. So it's finally time to celebrate a month of daily blogging by adding every major package repository to my configuration:

#+BEGIN_SRC emacs-lisp
  (require 'package)
  (setq package-archives
        '(("melpa-stable" . "https://stable.melpa.org/packages/")
          ("melpa" . "https://melpa.org/packages/")
          ("elpa" . "https://elpa.gnu.org/packages/")))
  (setq package-enable-at-startup nil)
  (package-initialize)
  (package-refresh-contents)
#+END_SRC

Note that instead of using =add-to-list= I have used =setq=. This is because for no functional reason, I just like seeing =elpa= instead of =gnu= as the name of the core Emacs repo. Whenever possible, I will try and use packages from the =elpa= repository first, then =melpa-stable=, then =melpa=. I like MELPA's idea of having a stable repository.

There are many, many packages to choose from, and it's been hard living without them for the first month of this blog. So let's start slow, by installing the package =use-package= that will enable us to easily use and configure other packages.

#+BEGIN_SRC emacs-lisp
  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))

  (eval-when-compile
    (require 'use-package))
#+END_SRC

This tells Emacs to download =use-package= if it's not already installed. By default =use-package= doesn't download the packages we request, but we can change this behaviour either by settings =:ensure t= in every invocation, or we could set this globally:

#+BEGIN_SRC emacs-lisp
  (require 'use-package-ensure)
  (setq use-package-always-ensure t)
#+END_SRC

For most of this week we will revel in silly little cosmetic changes that make me happy.
